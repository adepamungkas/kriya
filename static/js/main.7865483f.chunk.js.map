{"version":3,"sources":["redux/product/productAction.js","redux/product/productTypes.js","redux/user/userAction.js","redux/user/userTypes.js","components/MainPanel.js","components/User.js","components/Checkout.js","components/Error.js","components/Navbar.js","redux/product/productReducer.js","redux/user/userReducer.js","redux/rootReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["fetchProducts","dispatch","fetchProductsRequest","axios","get","then","response","users","data","fetchProductsSuccess","catch","error","fetchProductsFailure","message","type","payload","incrementProduct","item","selectedProduct","qty","fetchUsersRequest","fetchUsersSuccess","fetchUsersFailure","connect","state","product","e","decrementProduct","useEffect","loading","className","to","map","i","key","title","value","onClick","userData","user","fetchUsers","console","log","name","result_grouping","reduce","res","push","selected","buyProduct","Error","React","Component","totalOrder","initialState","reducer","action","concat","userReducer","rootReducer","combineReducers","productReducer","store","createStore","applyMiddleware","logger","thunk","App","path","component","MainPanel","exact","User","Checkout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uTAUaA,EAAgB,WACzB,OAAO,SAACC,GACJA,EAASC,KACTC,IACKC,IAAI,8CACJC,MAAK,SAAAC,GAEF,IAAMC,EAAQD,EAASE,KACvBP,EAASQ,EAAqBF,OAEjCG,OAAM,SAAAC,GAEHV,EAASW,EAAqBD,EAAME,eAKvCX,EAAuB,WAChC,MAAO,CACHY,KC7B6B,0BDiCxBL,EAAuB,SAAAF,GAChC,MAAO,CACHO,KClC6B,wBDmC7BC,QAASR,IAKJK,EAAuB,SAAAD,GAChC,MAAO,CACHG,KCzC6B,wBD0C7BC,QAASJ,IAIJK,EAAmB,SAACC,GAE7B,MAAO,CACHH,KChDyB,oBDiDzBI,gBAAiB,CACbD,KAAMA,EACNE,IAAK,KE7BJC,EAAoB,WAC7B,MAAO,CACHN,KC3B2B,wBD+BtBO,EAAoB,SAAAd,GAC7B,MAAO,CACHO,KChC2B,sBDiC3BC,QAASR,IAIJe,EAAoB,SAAAX,GAC7B,MAAO,CACHG,KCtC2B,sBDuC3BC,QAASJ,IEoBjB,IAqBeY,eArBS,SAACC,GAErB,MAAO,CACHhB,KAAMgB,EAAMC,YAOO,SAAAxB,GACvB,MAAO,CACHD,cAAe,kBAAMC,EAASD,MAC9BgB,iBAAiB,SAACU,GAAD,OAAKzB,EAASe,EAAiBU,KAChDC,iBAAiB,kBAAI1B,EJflB,CACHa,KCzDyB,0BG8ElBS,EA7Ef,YAAkF,IAA3Df,EAA0D,EAA1DA,KAAMR,EAAoD,EAApDA,cAAcgB,EAAsC,EAAtCA,iBAAkBW,EAAoB,EAApBA,iBAKzD,OAJAC,qBAAU,WACN5B,MACD,IAEIQ,EAAKqB,QACR,yBAAKC,UAAU,aACf,wCAEAtB,EAAKG,MACL,4BAAKH,EAAKG,OAEV,yBAAKmB,UAAU,aAGX,yBAAKA,UAAU,cACX,6BAEhB,oCACgB,kBAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,qCAA/B,cAGJ,2BAAOA,UAAU,SACb,+BACA,4BACI,kCACA,4CACA,4CACA,0CAGJ,+BAEItB,GACJA,EAAKiB,SACLjB,EAAKiB,QAAQO,KAAI,SAACP,EAAQQ,GAAT,OAET,wBAAIC,IAAKD,GACL,4BAAMA,EAAE,GACR,4BAAKR,EAAQU,OACb,4BAAI,4BAAQrB,KAAK,SAASgB,UAAU,yBAAyBM,MAAOX,EAAQU,MAAOE,QAASV,GAAxF,yBACJ,4BACI,4BAAQb,KAAK,SAASgB,UAAU,yBAAyBM,MAAOX,EAAQU,MAAOE,QAAS,WAAKrB,EAAiBS,EAAQU,SAAtH,mCCAhC,IAYeZ,eAZS,SAAAC,GACpB,MAAO,CACHc,SAAUd,EAAMe,SAIG,SAAAtC,GACvB,MAAO,CACHuC,WAAY,kBAAMvC,GH/Cf,SAACA,GACJA,EAASmB,KACTjB,IACKC,IAAI,8CACJC,MAAK,SAAAC,GAEF,IAAMC,EAAQD,EAASE,KACvBP,EAASoB,EAAkBd,IAC3BkC,QAAQC,IAAInC,MAEfG,OAAM,SAAAC,GAEHV,EAASqB,EAAkBX,EAAME,oBGuClCU,EAvDf,YAA0C,IAAzBe,EAAwB,EAAxBA,SAAUE,EAAc,EAAdA,WAIvB,OAHAZ,qBAAU,WACNY,MACD,IACIF,EAAST,QACZ,yBAAKC,UAAU,aACX,wCAEJQ,EAAS3B,MACT,4BAAK2B,EAAS3B,OAEd,yBAAKmB,UAAU,aAGX,2BAAOA,UAAU,SACb,+BACA,4BACI,kCACA,+CAIJ,+BACCQ,GACDA,EAAS/B,OACT+B,EAAS/B,MAAMyB,KAAI,SAACzB,EAAM0B,GAAP,OAEf,wBAAIC,IAAKD,GACL,4BAAKA,EAAG,GACR,4BAAK1B,EAAMoC,gBCwBnC,IA6BepB,eA7BS,SAAAC,GAEpB,IAAIN,EAAiBM,EAAMC,QAAQP,gBAC/B0B,EAAkB,GAUtB,OATA1B,EAAgB2B,QAAO,SAASC,EAAKV,GAMjC,OALKU,EAAIV,EAAMnB,QACX6B,EAAIV,EAAMnB,MAAQ,CAAEA,KAAMmB,EAAMnB,KAAME,IAAK,GAC3CyB,EAAgBG,KAAKD,EAAIV,EAAMnB,QAEnC6B,EAAIV,EAAMnB,MAAME,KAAOiB,EAAMjB,IACtB2B,IACR,IAEI,CACHtC,KAAMgB,EAAMC,QACZuB,SAASJ,MAMU,SAAA3C,GACvB,MAAO,CACHD,cAAe,kBAAMC,EAASD,MAC9BgB,iBAAiB,kBAAIf,EAASe,MAC9BiC,WAAW,kBAAIhD,ENfZ,CACHa,KC/DmB,oBKiFZS,EAjFf,YAAoE,IAA7Cf,EAA4C,EAA5CA,KAAKwC,EAAuC,EAAvCA,SAAUhD,EAA6B,EAA7BA,cAAeiD,EAAc,EAAdA,WAMjD,OAJArB,qBAAU,WACN5B,MACD,IAEIQ,EAAKqB,QACR,yBAAKC,UAAU,aACX,wCAEJtB,EAAKG,MACL,4BAAKH,EAAKG,OAEV,yBAAKmB,UAAU,aAChB,6BACK,iDACA,2BAAOA,UAAU,SAEb,+BACA,4BACI,kCACA,4CACA,qCAGJ,+BACCtB,GACDA,EAAKiB,SACLuB,EAAShB,KAAI,SAACN,EAAEO,GAAH,OAET,wBAAIC,IAAKD,GACL,4BAAKA,EAAE,GACP,4BAAKP,EAAET,MACP,4BAAKS,EAAEP,WAOnB,yBAAKW,UAAU,cAEX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,qCAAvB,SAFJ,OAII,kBAAC,IAAD,CAAMC,GAAG,IAAIM,QAASY,EAAYnB,UAAU,qCAA5C,aCpCDoB,E,iLARP,OACI,yBAAKpB,UAAU,aACX,uD,GALIqB,IAAMC,WC6C1B,IAYe7B,eAZS,SAAAC,GACpB,MAAO,CACHhB,KAAMgB,EAAMC,YAIO,SAAAxB,GACvB,MAAO,CACHD,cAAe,kBAAMC,EAASD,SAIvBuB,EArDf,YAA6B,IAATf,EAAQ,EAARA,KAEhB,OACI,yBAAKsB,UAAU,aAEX,yBAAKA,UAAU,kDACX,yBAAKA,UAAU,oEACX,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,mBAEV,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAvB,UAGJ,wBAAIA,UAAU,mBAEV,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,YAA3B,YAQZ,yBAAKA,UAAU,yDACX,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,YACV,gDAAqB,0BAAMA,UAAU,iCAAiCtB,EAAK6C,YAA3E,a,yCCvBtBC,EAAe,CACjBzB,SAAS,EACTJ,QAAS,GACTd,MAAO,GACP0C,WAAW,EACXnC,gBAAgB,IA2DLqC,EAxDC,WAAmC,IAAlC/B,EAAiC,uDAAzB8B,EAAcE,EAAW,uCAE9C,OAAQA,EAAO1C,MACX,IRpB6B,wBQqBzB,OAAO,eACAU,EADP,CAEIK,SAAS,IAIjB,IR1B6B,wBQ2BzB,OAAO,eACAL,EADP,CAEIK,SAAS,EACTJ,QAAS+B,EAAOzC,QAChBJ,MAAO,KAIf,IRlC6B,wBQmCzB,MAAO,CACHkB,SAAS,EACTJ,QAAS,GACTd,MAAO6C,EAAOzC,QACdsC,WAAW,GAGnB,IRzCyB,oBQ2CrB,OAAO,eACA7B,EADP,CAEI6B,WAAa7B,EAAM6B,WAAa,EAChCnC,gBAAgBM,EAAMN,gBAAgBuC,OAAOD,EAAOtC,mBAI5D,IRjDyB,oBQmDrB,GAAGM,EAAM6B,WAAa,EAClB,OAAO,eACA7B,EADP,CAEI6B,WAAa7B,EAAM6B,WAAa,IAI5C,IRzDmB,cQ0Df,OAAO,eACA7B,EADP,CAEI6B,WAAW,EACXnC,gBAAgB,KAGxB,QAAS,OAAOM,IC/DlB8B,EAAe,CACjBzB,SAAS,EACTtB,MAAO,GACPI,MAAO,GACP0C,WAAW,GA0BAK,EAvBK,WAAmC,IAAlClC,EAAiC,uDAAzB8B,EAAcE,EAAW,uCAClD,OAAQA,EAAO1C,MACX,IPf2B,sBOgBvB,OAAO,eACAU,EADP,CAEIK,SAAS,IAEjB,IPnB2B,sBOoBvB,MAAO,CACHA,SAAS,EACTtB,MAAOiD,EAAOzC,QACdJ,MAAO,IAEf,IPxB2B,sBOyBvB,MAAO,CACHkB,SAAS,EACTtB,MAAO,GACPI,MAAO6C,EAAOzC,SAEtB,QAAS,OAAOS,ICvBTmC,EALKC,YAAgB,CAChCnC,QAAQoC,EACRtB,KAAMmB,ICKKI,EALDC,YACVJ,EACAK,YAAgBC,IAAQC,MC4BbC,E,iLApBP,OACI,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,IAAD,KACI,8BACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOM,KAAK,IAAIC,UAAWC,EAAWC,OAAK,IAC3C,kBAAC,IAAD,CAAOH,KAAK,QAAQC,UAAWG,IAC/B,kBAAC,IAAD,CAAOJ,KAAK,YAAYC,UAAWI,IACnC,kBAAC,IAAD,CAAOJ,UAAWnB,Y,GAZ5BC,IAAMC,WCDJsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SD4H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhF,MAAK,SAAAiF,GACJA,EAAaC,gBAEd7E,OAAM,SAAAC,GACL8B,QAAQ9B,MAAMA,EAAME,c","file":"static/js/main.7865483f.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    FETCH_PRODUCT_REQUEST,\r\n    FETCH_PRODUCT_SUCCESS,\r\n    FETCH_PRODUCT_FAILURE,\r\n    INCREMENT_PRODUCT,\r\n    DECREMENT_PRODUCT,\r\n    BUY_PRODUCT\r\n} from './productTypes'\r\n\r\nexport const fetchProducts = () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchProductsRequest())\r\n        axios\r\n            .get('https://jsonplaceholder.typicode.com/todos')\r\n            .then(response => {\r\n                // response.data is the users\r\n                const users = response.data\r\n                dispatch(fetchProductsSuccess(users))\r\n            })\r\n            .catch(error => {\r\n                // error.message is the error message\r\n                dispatch(fetchProductsFailure(error.message))\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchProductsRequest = () => {\r\n    return {\r\n        type: FETCH_PRODUCT_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchProductsSuccess = users => {\r\n    return {\r\n        type: FETCH_PRODUCT_SUCCESS,\r\n        payload: users,\r\n\r\n    }\r\n}\r\n\r\nexport const fetchProductsFailure = error => {\r\n    return {\r\n        type: FETCH_PRODUCT_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const incrementProduct = (item) => {\r\n\r\n    return {\r\n        type: INCREMENT_PRODUCT,\r\n        selectedProduct: {\r\n            item: item,\r\n            qty: 1\r\n        }\r\n    }\r\n}\r\n\r\nexport const decrementProduct = () => {\r\n    return {\r\n        type: DECREMENT_PRODUCT,\r\n\r\n    }\r\n}\r\n\r\nexport const buyProduct = () => {\r\n    return {\r\n        type: BUY_PRODUCT,\r\n\r\n    }\r\n}","export const FETCH_PRODUCT_REQUEST = 'FETCH_PRODUCT_REQUEST'\r\nexport const FETCH_PRODUCT_SUCCESS = 'FETCH_PRODUCT_SUCCESS'\r\nexport const FETCH_PRODUCT_FAILURE = 'FETCH_PRODUCT_FAILURE'\r\nexport const INCREMENT_PRODUCT = 'INCREMENT_PRODUCT'\r\nexport const DECREMENT_PRODUCT = 'DECREMENT_PRODUCT'\r\nexport const BUY_PRODUCT = 'BUY_PRODUCT'","import axios from 'axios'\r\nimport {\r\n    FETCH_USERS_REQUEST,\r\n    FETCH_USERS_SUCCESS,\r\n    FETCH_USERS_FAILURE\r\n} from './userTypes'\r\n\r\nexport const fetchUsers = () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchUsersRequest())\r\n        axios\r\n            .get('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => {\r\n                // response.data is the users\r\n                const users = response.data\r\n                dispatch(fetchUsersSuccess(users))\r\n                console.log(users)\r\n            })\r\n            .catch(error => {\r\n                // error.message is the error message\r\n                dispatch(fetchUsersFailure(error.message))\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchUsersRequest = () => {\r\n    return {\r\n        type: FETCH_USERS_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchUsersSuccess = users => {\r\n    return {\r\n        type: FETCH_USERS_SUCCESS,\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const fetchUsersFailure = error => {\r\n    return {\r\n        type: FETCH_USERS_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\n","export const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST'\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS'\r\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE'\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchProducts,incrementProduct,decrementProduct } from '../redux'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction MainPanel ({  data, fetchProducts,incrementProduct, decrementProduct }) {\r\n    useEffect(() => {\r\n        fetchProducts()\r\n    }, [])\r\n\r\n    return data.loading ? (\r\n        <div className=\"container\">\r\n        <h5>Loading</h5>\r\n        </div>\r\n    ) : data.error ? (\r\n        <h2>{data.error}</h2>\r\n    ) : (\r\n        <div className=\"container\">\r\n\r\n\r\n            <div className=\"text-right\">\r\n                <br/>\r\n\r\n<label> </label>\r\n                <Link to=\"/Checkout\" className=\"btn pull-right btn-sm btn-success\">Checkout </Link>\r\n            </div>\r\n\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>No</th>\r\n                    <th>Product Name</th>\r\n                    <th>substraction</th>\r\n                    <th>add more</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    data &&\r\n                data.product &&\r\n                data.product.map((product,i )=>\r\n\r\n                        <tr key={i} >\r\n                            <td >{i+1}</td>\r\n                            <td>{product.title}</td>\r\n                            <td><button type=\"button\" className=\"btn btn-sm btn-warning\" value={product.title} onClick={decrementProduct}> decrease order (-) </button></td>\r\n                            <td>\r\n                                <button type=\"button\" className=\"btn btn-sm btn-primary\" value={product.title} onClick={()=>{incrementProduct(product.title)}}> increase order (+) </button></td>\r\n                        </tr>\r\n\r\n\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state ) => {\r\n\r\n    return {\r\n        data: state.product,\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchProducts: () => dispatch(fetchProducts()),\r\n        incrementProduct:(e)=>dispatch(incrementProduct(e)),\r\n        decrementProduct:()=>dispatch(decrementProduct()),\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MainPanel)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchUsers } from '../redux'\r\n\r\nfunction User ({ userData, fetchUsers }) {\r\n    useEffect(() => {\r\n        fetchUsers()\r\n    }, [])\r\n    return userData.loading ? (\r\n        <div className=\"container\">\r\n            <h5>Loading</h5>\r\n        </div>\r\n    ) : userData.error ? (\r\n        <h2>{userData.error}</h2>\r\n    ) : (\r\n        <div className=\"container\">\r\n\r\n\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>NO</th>\r\n                    <th>List All User</th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {userData &&\r\n                userData.users &&\r\n                userData.users.map((users,i )=>\r\n\r\n                    <tr key={i}>\r\n                        <td>{i +1 }</td>\r\n                        <td>{users.name}</td>\r\n\r\n                    </tr>\r\n\r\n\r\n                )}\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userData: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUsers: () => dispatch(fetchUsers())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(User)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchProducts,incrementProduct,buyProduct } from '../redux'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction MainPanel ({  data,selected, fetchProducts, buyProduct }) {\r\n\r\n    useEffect(() => {\r\n        fetchProducts()\r\n    }, [])\r\n\r\n    return data.loading ? (\r\n        <div className=\"container\">\r\n            <h5>Loading</h5>\r\n        </div>\r\n    ) : data.error ? (\r\n        <h2>{data.error}</h2>\r\n    ) : (\r\n        <div className=\"container\">\r\n       <br/>\r\n            <h5> Selected Product</h5>\r\n            <table className=\"table\">\r\n\r\n                <thead>\r\n                <tr>\r\n                    <th>NO</th>\r\n                    <th>Product Name</th>\r\n                    <th>Qty</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {data &&\r\n                data.product &&\r\n                selected.map((e,i )=>\r\n\r\n                    <tr key={i}>\r\n                        <td>{i+1}</td>\r\n                        <td>{e.item}</td>\r\n                        <td>{e.qty}</td>\r\n                    </tr>\r\n\r\n\r\n                )}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"text-right\">\r\n\r\n                <Link to=\"/\" className=\"btn pull-right btn-sm btn-warning\">Back </Link>\r\n                &nbsp;\r\n                <Link to=\"/\" onClick={buyProduct} className=\"btn pull-right btn-sm btn-success\">Buy </Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    var selectedProduct =state.product.selectedProduct;\r\n    var result_grouping = [];\r\n    selectedProduct.reduce(function(res, value) {\r\n        if (!res[value.item]) {\r\n            res[value.item] = { item: value.item, qty: 0 };\r\n            result_grouping.push(res[value.item])\r\n        }\r\n        res[value.item].qty += value.qty;\r\n        return res;\r\n    }, {});\r\n\r\n    return {\r\n        data: state.product,\r\n        selected:result_grouping\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchProducts: () => dispatch(fetchProducts()),\r\n        incrementProduct:()=>dispatch(incrementProduct()),\r\n        buyProduct:()=>dispatch(buyProduct())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MainPanel)\r\n","import React from \"react\"\r\n\r\nclass Error extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h5>Something Wrong :(</h5>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {fetchProducts} from \"../redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nfunction Navbar ({  data }) {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\r\n                <div className=\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n\r\n                            <Link to=\"/\" className=\"nav-link\">Home </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item active\">\r\n\r\n                            <Link to=\"/User\" className=\"nav-link\">User </Link>\r\n                        </li>\r\n\r\n\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <label> Total Order: <span className=\"badge badge-pill badge-danger\">{data.totalOrder}</span> </label>\r\n\r\n\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.product\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchProducts: () => dispatch(fetchProducts())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Navbar)\r\n\r\n\r\n","import {\r\n    FETCH_PRODUCT_REQUEST,\r\n    FETCH_PRODUCT_SUCCESS,\r\n    FETCH_PRODUCT_FAILURE,\r\n    INCREMENT_PRODUCT,\r\n    DECREMENT_PRODUCT,\r\n    BUY_PRODUCT\r\n} from './productTypes'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    product: [],\r\n    error: '',\r\n    totalOrder:0,\r\n    selectedProduct:[]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FETCH_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n\r\n            }\r\n\r\n        case FETCH_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                product: action.payload,\r\n                error: '',\r\n\r\n            }\r\n\r\n        case FETCH_PRODUCT_FAILURE:\r\n            return {\r\n                loading: false,\r\n                product: [],\r\n                error: action.payload,\r\n                totalOrder:0\r\n            }\r\n\r\n        case INCREMENT_PRODUCT:\r\n\r\n            return {\r\n                ...state,\r\n                totalOrder : state.totalOrder + 1,\r\n                selectedProduct:state.selectedProduct.concat(action.selectedProduct)\r\n\r\n            }\r\n\r\n        case DECREMENT_PRODUCT:\r\n\r\n            if(state.totalOrder > 0){\r\n                return {\r\n                    ...state,\r\n                    totalOrder : state.totalOrder - 1\r\n                }\r\n            }\r\n\r\n        case  BUY_PRODUCT:\r\n            return {\r\n                ...state,\r\n                totalOrder:0,\r\n                selectedProduct:[]\r\n            }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","import {\r\n    FETCH_USERS_REQUEST,\r\n    FETCH_USERS_SUCCESS,\r\n    FETCH_USERS_FAILURE\r\n} from './userTypes'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    users: [],\r\n    error: '',\r\n    totalOrder:0\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                users: action.payload,\r\n                error: ''\r\n            }\r\n        case FETCH_USERS_FAILURE:\r\n            return {\r\n                loading: false,\r\n                users: [],\r\n                error: action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default userReducer\r\n","import { combineReducers } from 'redux';\r\nimport productReducer from './product/productReducer'\r\nimport userReducer from './user/userReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    product:productReducer,\r\n    user: userReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(logger, thunk)\r\n)\r\n\r\nexport default store\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\n\nimport MainPanel from \"./components/MainPanel\";\nimport User from \"./components/User\";\nimport Checkout from \"./components/Checkout\";\nimport Error from \"./components/Error\";\nimport Navbar from \"./components/Navbar\";\nimport store from './redux/store'\n\n\nclass App extends React.Component {\n    render() {\n\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <main>\n                        <Navbar/>\n                        <Switch>\n                            <Route path=\"/\" component={MainPanel} exact/>\n                            <Route path=\"/User\" component={User}/>\n                            <Route path=\"/Checkout\" component={Checkout}/>\n                            <Route component={Error}/>\n                        </Switch>\n                    </main>\n                </BrowserRouter>\n            </Provider>\n\n        );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}